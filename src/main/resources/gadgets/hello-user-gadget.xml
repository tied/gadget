<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="__MSG_gadget.user.title__"
title_url="__MSG_gadget.user.title.url__"
description="__MSG_gadget.user.description__"
author="Jobin Kuruvilla"
author_email="author@gmail.com"
screenshot='#staticResourceUrl("com.jtricks.reports-plugin:reports-plugin-resources", "screenshot.png")'
thumbnail='#staticResourceUrl("com.jtricks.reports-plugin:reports-plugin-resources", "thumbnail.png")'
height="150"
>
<Optional feature="gadget-directory">
<Param name="categories">
JIRA
Other
</Param>
</Optional>
<Require feature="oauthpopup" />
<Require feature="dynamic-height"/>
<Require feature="setprefs" />
<Require feature="views" />
<Require feature="oauthpopup" />
<Optional feature='auth-refresh' />
<Optional feature="atlassian.util" />

#oauth
#supportedLocales("gadget.common")
<Locale messages="__ATLASSIAN_BASE_URL__/download/resources/com.jtricks.reports-plugin/i18n/messages.xml"/>
</ModulePrefs>
<UserPref name="isConfigured" datatype="hidden" default_value="false"/>
<UserPref name="refresh" datatype="hidden" default_value="false"/>
<UserPref name="displayName" datatype="hidden" default_value="true"/>
<UserPref name="useStatusTag" datatype="hidden" default_value="true"/>
<Content type="html" view="profile,canvas,home">
<![CDATA[
#requireResource("com.atlassian.jira.gadgets:common")
#requireResource("com.jtricks.reports-plugin:reports-plugin-resources")
#includeResources()


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
console.log("Load Google chart");
google.charts.load('current', {'packages':['corechart']});


(function () {
  var gadget = AJS.Gadget({
      baseUrl: "__ATLASSIAN_BASE_URL__",
      useOauth: "/rest/gadget/1.0/currentUser",
      config: {
        descriptor: function (args) {
            var gadget = this;
            return  {
                fields: [
                {
                    userpref: "displayName",
                    label: gadget.getMsg("property.label"),
                    description:gadget.getMsg("property.description"),
                    type: "select",
                    selected: gadget.getPref("displayName"),
                    options:[
                    {
                        label:"Show graph",
                        value:"true"
                    },
                    {
                        label:"Show text",
                        value:"false"
                    }
                    ]
                },
                {
                    userpref: "useStatusTag",
                    label: gadget.getMsg("property2.label"),
                    description:gadget.getMsg("property2.description"),
                    type: "select",
                    selected: gadget.getPref("useStatusTag"),
                    options:[
                    {
                        label:"Open",
                        value:"true"
                    },
                    {
                        label:"Closed",
                        value:"false"
                    }
                    ]
                },
                AJS.gadget.fields.nowConfigured()
                ]
            };
        }
    },
    view: {
        enableReload: true,
        onResizeAdjustHeight: true,
        template: function(args) {
         var gadget = this;
                    gadget.getView().empty(); // Reset view
                    /*
					if (gadget.getPref("displayName") == "true")

                    AJS.log("Message to termnial");
                    console.log("user: " + getCurrentUserName());
                    console.log(getFieldInJasonAtURL(gadget));

                    console.log(args.open["total"]);
                    */
                    
                    function drawChart() {
                      var rows = 30;
                      var data = new google.visualization.DataTable();
                      data.addColumn('datetime', 'Date');
                      data.addColumn('number', 'Closed');
                      data.addColumn('number', 'Open');

                      var closed = 0;
                      var closed_status = "Closed";
                      var open = 0;
                      var open_status = "Open";
                      var time_period = "d"; // d == day, w == week, y == year
                      //set max result
                      var jql = "project%20%3D%20qwe%20AND%20createdDate%20>%3D%20startOfDay(-";
                      // Fullpath: /rest/api/2/search?jql=project%20%3D%20qwe%20AND%20createdDate%20>%3D%20startOfDay(-30d)%20AND%20status%20%3D%20
                      for (var i=rows; i > 0; i--) 
                      {
                        AJS.$.ajax({
                            url: "/rest/api/2/search?jql=" + jql + i.toString() + "d)" + "%20AND%20status%20%3D%20" + closed_status + "&maxResults=0",
                            type: 'get',
                            contentType: "application/json",
                            dataType: "json",
                            async: false,
                            success: function(data) { closed += data["total"]; }
                        });
                        
                        AJS.$.ajax({
                            url: "/rest/api/2/search?jql=" + jql + i.toString() + "d)" + "%20AND%20status%20%3D%20" + open_status + "&maxResults=0", 
                            type: 'get',
                            contentType: "application/json",
                            dataType: "json",
                            async: false,
                            success: function(data) { open += data["total"]; }
                        });
                        
                        var d = new Date(new Date().setDate(new Date().getDate() - i));
                        data.addRow([d, closed, open ]);
                    }


                    var options = {
                      title: 'Open vs Closed issues',
                      curveType: 'none',
                      legend: { position: 'bottom' },
                      lineWidth: 4,
                      hAxis: {
                        title: 'Time'
                      },
                      vAxis: {
                          title: 'Issues'
                      },
                  };

                  var chart = new google.visualization.LineChart(document.getElementById('chart_div'));

                  chart.draw(data, options);
              }




                    gadget.getView().append("<div id='chart_div' align='center' style='width: 98%; height: 99%'/>"); // Append element to doc, 'curve_chart' set in reports-plugin.js
                    console.log("Call to drawChart()");
                    google.charts.setOnLoadCallback(drawChart); 
                },
                args: [{
                 key: "open",
                 ajaxOptions: function() {
                     return {
                        contentType: 'application/json',
                        url: "/rest/gadget/1.0/currentUser"
                    };
                }
            },
            {
                key: "closed",
                ajaxOptions: function() {
                    return {
                        contentType: 'application/json',
                        url: "/rest/gadget/1.0/currentUser"
                    };
                }
            }]
        }
    });
})();
</script>
]]>
</Content>
</Module>

