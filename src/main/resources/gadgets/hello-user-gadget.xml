<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="__MSG_gadget.user.title__"
                 title_url="__MSG_gadget.user.title.url__"
                 description="__MSG_gadget.user.description__"
                 author="Jobin Kuruvilla"
		 		 author_email="author@gmail.com"
                 screenshot='#staticResourceUrl("com.jtricks.reports-plugin:reports-plugin-resources", "screenshot.png")'
                 thumbnail='#staticResourceUrl("com.jtricks.reports-plugin:reports-plugin-resources", "thumbnail.png")'
		 		 height="150"
                 >
        <Optional feature="gadget-directory">
            <Param name="categories">
                JIRA
                Other
            </Param>
        </Optional>
        <Require feature="oauthpopup" />
		<Require feature="dynamic-height"/>
		<Require feature="setprefs" />
        <Require feature="views" />
        <Require feature="oauthpopup" />
        <Optional feature='auth-refresh' />
        <Optional feature="atlassian.util" />

        #oauth
        #supportedLocales("gadget.common")
		<Locale messages="__ATLASSIAN_BASE_URL__/download/resources/com.jtricks.reports-plugin/i18n/messages.xml"/>
    </ModulePrefs>
    <UserPref name="isConfigured" datatype="hidden" default_value="false"/>
	<UserPref name="refresh" datatype="hidden" default_value="false"/>
	<UserPref name="displayName" datatype="hidden" default_value="true"/>
    <UserPref name="useStatusTag" datatype="hidden" default_value="true"/>
    <Content type="html" view="profile,canvas,home">
        <![CDATA[
        #requireResource("com.atlassian.jira.gadgets:common")
        #requireResource("com.jtricks.reports-plugin:reports-plugin-resources")
	    #includeResources()

       

	    <script type="text/javascript">
        console.log("Load Google chart");
        //google.charts.load('current', {'packages':['corechart']});
        google.charts.load('current', {'packages':['bar', 'corechart', 'table']});
        (function () {
		    var gadget = AJS.Gadget({
		        baseUrl: "__ATLASSIAN_BASE_URL__",
                useOauth: "/rest/gadget/1.0/currentUser",
				config: {
                        descriptor: function (args) {
                            var gadget = this;
                            return  {
                                fields: [
                                    {
                                        userpref: "displayName",
                                        label: gadget.getMsg("property.label"),
                                        description:gadget.getMsg("property.description"),
                                        type: "select",
                                        selected: gadget.getPref("displayName"),
                                        options:[
                                            {
                                                label:"Show graph",
                                                value:"true"
                                            },
                                            {
                                                label:"Show text",
                                                value:"false"
                                            }
                                        ]
                                    },
                                    {
                                        userpref: "useStatusTag",
                                        label: gadget.getMsg("property2.label"),
                                        description:gadget.getMsg("property2.description"),
                                        type: "select",
                                        selected: gadget.getPref("useStatusTag"),
                                        options:[
                                            {
                                                label:"Open",
                                                value:"true"
                                            },
                                            {
                                                label:"Closed",
                                                value:"false"
                                            }
                                        ]
                                    },
                                    AJS.gadget.fields.nowConfigured()
                                ]
                            };
                        }
                    },
		        view: {
				enableReload: true,
                onResizeAdjustHeight: true,
				template: function(args) {
					var gadget = this;
                    gadget.getView().empty(); // Reset view
                    /*
					if (gadget.getPref("displayName") == "true")

                    AJS.log("Message to termnial");
                    console.log("user: " + getCurrentUserName());
                    console.log(getFieldInJasonAtURL(gadget));

                    console.log(args.open["total"]);
                    */
                    // var date = new Date(new Date().setDate(new Date().getDate() - 30));
                    
                    var rows = 30;
                    console.log("Days");
 
                    var dataTable = new google.visualization.DataTable();
                    // Declare columns
                    data.addColumn('datetime', 'Date');
                    data.addColumn('int', 'Closed');
                    data.addColumn('int', 'Open');

                    for (var d=1; d < rows; d++) {
                        var closed = 0;
                        /*
                        AJS.$.ajax({
                            url: AJS.escapeHtml("/rest/api/2/project"), //"/rest/api/2/search?jql=project=%27PROJ%27",
                            type: 'get',
                            contentType: "application/json",
                            dataType: "json",
                            async: false,
                            success: function(data) { res = data["total"]; }
                        });
                        */
                        var open = 0;
                        /*
                        AJS.$.ajax({
                            url: AJS.escapeHtml("/rest/api/2/project"), //"/rest/api/2/search?jql=project=%27PROJ%27",
                            type: 'get',
                            contentType: "application/json",
                            dataType: "json",
                            async: false,
                            success: function(data) { res = data["total"]; }
                        });
                        */
                        data.addRow([new Date(new Date().setDate(new Date().getDate() - days)), closed, open ]);    
                    }

                    
                    
                    
                    gadget.getView().append("<div id='curve_chart' align='center'/>"); // Append element to doc, 'curve_chart' set in reports-plugin.js
                    console.log("Call to drawChart()");
                    google.charts.setOnLoadCallback(function() { drawChart(dataTable) });
				    },
				    args: [{
    					key: "open",
    					ajaxOptions: function() {
    					    return {
                            contentType: 'application/json',
    						url: "/rest/api/2/search?jql=project='PROJ'"
    					    };
					}
				    },
                    {
                        key: "closed",
                        ajaxOptions: function() {
                            return {
                            contentType: 'application/json',
                            url: "/rest/api/2/search?jql=project='PROJ'"
                            };
                    }
                    }]
			}
		    });
		})();
	    </script>
        ]]>
    </Content>
</Module>

